services:
  emqx:
    image: emqx/emqx:5.7.0
    container_name: emqx
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "8083:8083"
      - "18083:18083"
    env_file: .env
    environment:
      - EMQX_ALLOW_ANONYMOUS=true
      - EMQX_MQTT__RETAIN_AVAILABLE=true
      - EMQX_MQTT__MAX_PACKET_SIZE=10MB
  
  timescale:
    image: timescale/timescaledb:latest-pg15
    container_name: timescale
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ts-data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d
  
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    env_file: .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
  
  ingest:
    build: ./services/ingest
    container_name: aura-ingest
    restart: unless-stopped
    depends_on: [emqx, timescale, minio]
    env_file: .env
    environment:
      - MQTT_URI=mqtt://emqx:1883
      - MQTT_USERNAME=${DEVICE_USER}
      - MQTT_PASSWORD=${DEVICE_PASS}
      - PG_DSN=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescale:5432/${POSTGRES_DB}
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=${MINIO_ROOT_USER}
      - S3_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - S3_BUCKET=${S3_BUCKET}
      - S3_REGION=${S3_REGION}
    volumes:
      - ./services/ingest:/app
  
  api:
    build: ./services/api
    container_name: aura-api
    restart: unless-stopped
    depends_on: [timescale, emqx]
    env_file: .env
    environment:
      - PG_DSN=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@timescale:5432/${POSTGRES_DB}
      - MQTT_HOST=emqx
      - MQTT_PORT=1883
      - MQTT_USERNAME=${DEVICE_USER}
      - MQTT_PASSWORD=${DEVICE_PASS}
      - SERVER_IP=${SERVER_IP}
    ports:
      - "${API_PORT}:8080"
    volumes:
      - ./services/api:/app

volumes:
  emqx-data:
  emqx-log:
  ts-data:
  minio-data:
